#include "stm32f4xx.h"
#include "fpu.h"
#include "uart.h"
#include <stdio.h>
#include "timebase.h"
#include <stdbool.h>
#include "bsp.h"


/*
 * modules to implement
 *
 * FPU
 * UART
 * GPIO(BSP)
 * Time Base
 */

/*Boot_Loader main*/

#define APPLICATION_ADDRESS_ONE 0x08008000
#define APPLICATION_ADDRESS_TWO 0x08020000

typedef void (*functionPointer)(void);
void Jump_To_application(uint32_t appAddress);

void Jump_To_application(uint32_t appAddress)
{
	uint32_t application_start_address;

	functionPointer jump_to_app;

	uart2_write_string("Welcome to Bootloader\r\n");

	delay(3);

	application_start_address = *(uint32_t *)(appAddress + 4);

	jump_to_app = (functionPointer) application_start_address;

	SCB->VTOR = appAddress;
	//initialize main stake pointer

	__set_MSP(*(uint32_t *)(appAddress));

	//jump to application

	jump_to_app();

	while(1)
	{
		//wont come
	}

}


int main(void)
{
	//FPU enable
	fpu_enable();
	//UASRT@ enable
	//uartDebugInit();
	uart2_init();

	//timebase
	timeBase_inti();

	//LED INIT
	led_inti();

	//Button INIT
	button_inti();

	//Jump_To_application();

	uart2_write_string("Welcome to Boot-Loader\r\n");

	uart2_write_string("Select Application\r\n");

	uart2_write_string("Press A to start application 1\r\n");

	uart2_write_string("Press B to start application 2\r\n");

		while (1)
		{
			char c = uart_rx_char();    // Wait for input


			if(c == 'A' || c == 'a')
			{

				uart2_write_char(c);

				//jump to application 1
				Jump_To_application(APPLICATION_ADDRESS_ONE);
			}
			else if(c == 'B' || c == 'b')
			{
				uart2_write_char(c);

				//jump to application 2
				Jump_To_application(APPLICATION_ADDRESS_TWO);

			}
			else
			{
				uart2_write_string("Invalid Input\r\n");
				uart2_write_string("Please Press A or B to start application\r\n");
			}

		}
}
